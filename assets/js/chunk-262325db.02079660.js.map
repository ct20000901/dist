{"version":3,"sources":["webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","model","prop","event","props","chips","clearable","type","default","counterSizeString","counterString","placeholder","prependIcon","readonly","showSize","Boolean","validator","v","includes","smallChips","truncateLength","Number","value","val","computed","classes","computedCounterValue","fileCount","this","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","map","file","truncatedText","hasChips","watch","handler","immediate","$refs","input","methods","clearableCallback","genChips","small","on","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","$createElement","staticClass","class","selection","genTextFieldSlot","node","click","onInput","files","e","onKeyDown","truncateText","str","charsKeepOneSide","Math","directives","ripple","genRipple","data","center","Object","onChange","valueComparator","baseMixins","autoGrow","noResize","rowHeight","isNaN","parseFloat","rows","parseInt","noResizeHandle","$nextTick","mounted","setTimeout","calculateInputHeight","height","minHeight","isFocused","active","activeClass","chipGroup","close","closeIcon","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","created","breakingProps","original","replacement","genFilter","left","genClose","right","genContent","$slots","render","tabindex","setBackgroundColor","color","h","setTextColor","id","inputValue","falseValue","trueValue","multiple","String","hasColor","computedColor","isDark","Array","isActive","item","undefined","rippleState","genLabel","attrs","role","domProps","checked","blur","change","focus","keydown","onKeydown","ref","onBlur","onFocus"],"mappings":"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","file":"assets/js/chunk-262325db.02079660.js","sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n      data.on = Object.assign({\n        click: this.onChange,\n      }, this.$listeners)\n\n      return this.$createElement('div', data)\n    },\n    onChange () {},\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.disabled && !this.validationState\n        ? 'primary'\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        click: (e: Event) => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault()\n\n          this.onChange()\n        },\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}